{
  "home": "Home",
  "about": "About",
  "contact": "Contact",
  "common": {
    "edit": "Edit",
    "delete": "Delete",
    "detail": "Detail",
    "add": "Add",
    "set": "Set",
    "search": "Search",
    "create": "Create",
    "save": "Save",
    "publish": "Publish",
    "saveOnly": "Save Only",
    "next": "Next",
    "pre": "Previous",
    "train": "Train",
    "batchTrain": "Batch Train",
    "done": "Done",
    "batchDelete": "Batch Delete",
    "cancel": "Cancel",
    "confirm": "Confirm",
    "uploadText": "Click or drag files here to upload",
    "supports": "Supports",
    "logout": "Logout",
    "settings": "Settings",
    "addNew": "Add New",
    "model": "Model",
    "synch": "Synch",
    "error": "Error",
    "delConfirm": "Do you want to delete the selected item(s)?",
    "delConfirmCxt": "After deletion, the data cannot be recovered.",
    "delSuccess": "Delete successfully",
    "delFailed": "Failed to delete data",
    "valFailed": "Validate Failed",
    "fetchFailed": "Failed to fetch list",
    "updateSuccess": "Updated successfully",
    "updateFailed": "Failed to update",
    "addSuccess": "Added successfully",
    "saveSuccess": "save successfully",
    "saveFailed": "Failed to save them(s)",
    "selectMsg": "Please select the",
    "inputMsg": "Please input the",
    "input": "Input",
    "select": "Select",
    "serverError": "Server error, please try again later.",
    "fileType": "is not a supported file type.",
    "invalidData": "Invalid data format",
    "training": "Training",
    "trainFailed": "Failed to train",
    "noResult": "No Results",
    "inputRequired": "Please Input, it is required",
    "invalidURL": "Please enter a valid URL",
    "errorFetch": "Error fetch",
    "fieldRequired": "Text cannot be empty. This field is required.",
    "sendFailed": "Failed to send message",
    "noAccessToken": "No accessToken found in session",
    "usePermissionsContextError": "usePermissionsContext must be used within a PermissionsProvider",
    "useLocaleError": "useLocale must be used within a LocaleProvider",
    "useThemeError": "useTheme must be used within a ThemeProvider",
    "selectAll": "Select All",
    "clear": "Clear",
    "selected": "Selected",
    "items": "item(s)",
    "searchPlaceHolder": "Search...",
    "setting": "Setting",
    "id": "ID",
    "action": "Actions",
    "name": "Name",
    "type": "Type",
    "descripition": "Descripition",
    "unit": "Unit",
    "description": "Description",
    "deleteTitle": "Do you want to delete this item?",
    "deleteContent": "After deletion, the data cannot be recovered.",
    "successfullyDeleted": "Delete successfully !",
    "successfullyAdded": "New successfully added !",
    "successfulSetted": "Setting successful !",
    "successfullyModified": "Modified successfully !",
    "successfullyExported": "Export successfully !",
    "successfullyImported": "Import successfully !",
    "required": "Required",
    "valueValidate": "The value cannot be empty",
    "group": "Group",
    "time": "Time",
    "operator": "Operator",
    "close": "Close",
    "creator": "Creator",
    "createTime": "Create Time",
    "uploadAction": "Click or drag file to this area to upload",
    "started": "Started.",
    "closed": "Closed.",
    "import": "Import",
    "export": "Export",
    "more": "More",
    "organizations": "Organizations",
    "all": "All",
    "remove": "Remove",
    "prompt": "Prompt",
    "batchEdit": "Batch Edit"
  },
  "cutomTable": {
    "fieldSetting": "List field settings"
  },
  "monitor": {
    "view": "View",
    "source": "Source",
    "instance": "Instance",
    "metric": "Metric",
    "filter": "Filter",
    "label": "Label",
    "value": "Value",
    "term": "Term",
    "objectType": "Type",
    "calculatedMetric": "Calculated Metric",
    "asset": "Asset",
    "assets": "asset(s)",
    "assetValidate": "The Asset cannot be empty",
    "include": "Include",
    "exclude": "Exclude",
    "group": "Group",
    "search": {
      "searchCriteria": "Search Criteria",
      "object": "Object",
      "area": "Area",
      "table": "Table"
    },
    "views": {
      "indexView": "Index View",
      "overview": "Overview",
      "cpu_summary.usage": "CPU",
      "mem.pct_used": "Memory",
      "load5": "Load(5min)",
      "sysUpTime": "Time",
      "iftotalInOctets": "Incoming Traffic",
      "iftotalOutOctets": "Outgoing Traffic",
      "ipmi_power_watts": "Power State",
      "ipmi_voltage_volts": "Voltage",
      "ipmi_temperature_celsius": "Temperature",
      "vmware_esxi_count": "Number of ESXi",
      "vmware_datastore_count": "Number of Datastores",
      "vmware_vm_count": "Number of VM",
      "esxi_cpu_usage_average_gauge": "CPU usage",
      "esxi_mem_usage_average_gauge": "Memory utilization rate",
      "esxi_disk_read_average_gauge": "Disk read rate",
      "data_storage_disk_used_average_gauge": "Disk utilization rate",
      "data_storage_store_accessible_gauge": "Storage connection status",
      "vm_cpu_usage_average_gauge": "CPU utilization rate",
      "vm_mem_usage_average_gauge": "Memory utilization rate",
      "vm_disk_io_usage_gauge": "Disk I/O Usage",
      "http_success.rate": "Success Rate",
      "http_code": "HTTP Code",
      "ping_response_time": "Response Time",
      "ping_error_response_code": "Ping State",
      "http_duration": "Response Time",
      "pod_status": "Status",
      "pod_cpu_utilization": "CPU",
      "pod_memory_utilization": "Memory",
      "node_status_condition": "Status",
      "node_cpu_utilization": "CPU",
      "node_memory_utilization": "Memory",
      "cluster_pod_count": "Pod Count",
      "cluster_node_count": "Node Conut",
      "interface": "Interface",
      "ifOperStatus": "Status",
      "ifHighSpeed": "Bandwidth",
      "ifInErrors": "In Errors",
      "ifOutErrors": "Out Errors",
      "ifInUcastPkts": "In Ucast",
      "ifOutUcastPkts": "Out Ucast",
      "ifInOctets": "In traffic",
      "ifOutOctets": "Out traffic",
      "docker_n_containers": "Containers Count",
      "docker_container_status": "Status",
      "docker_container_cpu_usage_percent": "CPU",
      "docker_container_mem_usage_percent": "Memory",
      "zookeeper_uptime": "Uptime",
      "zookeeper_avg_latency": "Average Latency",
      "apache_uptime": "Uptime",
      "apache_req_per_sec": "Requests per Second",
      "apache_cpu_load": "CPU Load",
      "clickhouse_events_query": "Query Rate",
      "clickhouse_events_inserted_rows": "Inserted Rows Rate",
      "clickhouse_asynchronous_metrics_load_average1": "Load Average (1m)",
      "rabbitmq_overview_messages_ready": "Messages Ready",
      "activemq_topic_consumer_count": "Consumer Count",
      "nginx_requests": "Requests Rate",
      "nginx_active": "Active Connections",
      "tomcat_connector_request_count": "Request Count",
      "tomcat_connector_current_threads_busy": "Busy Thread Count",
      "tomcat_connector_error_count": "Error Count",
      "consul_health_checks_status": "Health Check Status",
      "consul_health_checks_passing": "Passing Health Checks",
      "elasticsearch_fs_total_available_in_bytes": "Available Disk Space",
      "elasticsearch_http_current_open": "HTTP Connections",
      "elasticsearch_indices_docs_count": "Document Count",
      "mongodb_connections_current": "Current Connections",
      "mongodb_latency_commands": "Command Latency",
      "mongodb_resident_megabytes": "Memory",
      "mysql_bytes_received": "Bytes Received",
      "mysql_bytes_sent": "Bytes Sent",
      "mysql_connections_total": "Connections Created",
      "postgresql_active_time": "Active Time",
      "postgresql_blks_hit": "Block Cache Hits",
      "redis_used_memory": "Used Memory",
      "redis_instantaneous_ops_per_sec": "Operations per Second",
      "reportTime": "Report Time",
      "metrics": "Metrics",
      "monitorView": "Monitoring View",
      "alertList": "Alarm List",
      "viewDashboard": "View DashBoard",
      "colony": "Colony",
      "namespace": "Namespace",
      "workload": "Workload",
      "node": "Node",
      "filterOptions": "Filter options",
      "displayIndicators": "Displayed indicators",
      "editIndicators": "Click to edit",
      "jmx_scrape_error_gauge": "JMX Scrape Error",
      "jvm_memory_usage_used_value": "JVM Memory Used",
      "jvm_memory_usage_max_value": "JVM Memory Usage Max",
      "jvm_os_memory_physical_free_value": "Free Physical Memory",
      "jvm_gc_collectiontime_seconds_value": "GC Collection Time",
      "cvm_CPU_Usage": "CPU Utilization",
      "cvm_MemUsage": "Memory Utilization",
      "cvm_CvmDiskUsage": "Disk Utilization",
      "cvm_LanOuttraffic": "Internal Outbound Bandwidth",
      "cvm_WanOuttraffic": "External Outbound Bandwidth",
      "dashboard": "DashBoard",
      "quickSearch": "Quick Search",
      "apache_up": "Running Status",
      "apache_duration_ms_total": "Request Duration",
      "activemq_connections_gauge": "Current Connections",
      "activemq_memory_usage_ratio_gauge": "Memory Usage Ratio",
      "activemq_topic_queue_size_value": "Queue Size",
      "activemq_message_total_rate": "Growth Rate",
      "weblogic_threadpool_stuck_thread_count_value": "Stuck Thread Count",
      "weblogic_threadpool_load_ratio": "Thread Pool Load Ratio",
      "weblogic_application_overallhealthstatejmx_is_critical_value": "Application Overall Health Critical State",
      "nginx_up": "Nginx Status",
      "nginx_connections_active": "Active Connections",
      "nginx_http_requests_total": "Total HTTP Requests",
      "nginx_vts_server_requestMsec": "Zone Request Time",
      "tomcat_errorcount_increase": "Error Increase",
      "tomcat_threadpool_utilization": "Threadpool Utilization",
      "tomcat_session_rejectionrate": "Session Rejection Rate",
      "jetty_queuedthreadpool_utilizationrate_value": "Utilization Rate",
      "jvm_memory_heap_usage_used_rate": "Heap Memory Usage Change Rate",
      "jvm_memory_heap_usage_max_value": "Heap Memory Usage (Max)",
      "oracledb_up_gauge": "OracleDb Status",
      "oracledb_activity_user_rollbacks_rate": "User Rollbacks Rate",
      "oracledb_wait_time_user_io_gauge": "User I/O Wait Time",
      "oracledb_tablespace_used_percent_gauge": "Tablespace Usage Percentage"
    },
    "events": {
      "event": "Event",
      "alert": "Alert",
      "strategy": "Strategy",
      "template": "Template",
      "filterItems": "Filter Items",
      "level": "Level",
      "state": "State",
      "notify": "Notify",
      "critical": "Critical",
      "error": "Error",
      "warning": "Warning",
      "new": "New",
      "recovery": "Recovery",
      "noDataRecovery": "NoData Recovery",
      "closed": "Closed",
      "notified": "Notified",
      "unnotified": "Unnotified",
      "title": "Title",
      "index": "Index",
      "alertDetail": "Alert Detail",
      "information": "Information",
      "firstAlertTime": "First Alert Time",
      "duration": "Duration",
      "assetType": "Asset Type",
      "assetGroup": "Asset Group",
      "notifier": "Notifier",
      "closeTitle": "Do you want to close this item?",
      "closeContent": "After closing, the data cannot be recovered.",
      "successfullyClosed": "Close successfully !",
      "closeAlert": "Close This Alert",
      "eventName": "Event Name",
      "executionTime": "Execution Time",
      "effective": "Effective",
      "basicInformation": "Basic Information",
      "metricInformation": "Metrics Information",
      "defineTheMetric": "Define the Metric",
      "setAlertConditions": "Set alert conditions",
      "configureNotifications": "Configure notifications",
      "setAssets": "Please set the assets to be monitored.",
      "setDimensions": "Please set the indicators that need to be monitored. You can filter indicators by various dimensions.",
      "metricValidate": "The Metric cannot be empty",
      "conditionValidate": "The Condition cannot be empty",
      "frequency": "Frequency",
      "period": "Period",
      "method": "Method",
      "setPeriod": "Please select the detection period, which is used to measure the duration within which monitoring data is collected.",
      "setMethod": "Please select the detection method, which is used for calculating all data within the detection period.",
      "setFrequency": "Please select the detection frequency, which indicates how often to collect monitoring data.",
      "algorithm": "Algorithm",
      "threshold": "Threshold",
      "thresholdColor": "ThresholdColor",
      "setThreshold": "Detect values based on threshold levels of monitoring metrics",
      "whenResultIs": "When Result is",
      "recoveryCondition": "Restored if the condition is not met for",
      "consecutivePeriods": "consecutive periods.",
      "setRecovery": "When the conditions are met, the generated alerts will be automatically resolved.",
      "nodata": "No Data",
      "reportedFor": "When there is no data reported for",
      "nodataPeriods": ", a 'No Data' alert will be generated.",
      "nodataRecoverCondition": "When data reporting returns to normal within the",
      "nodataRecover": ",the 'No Data Alert' will automatically recover.",
      "notification": "Notification",
      "email": "Email",
      "createPolicy": "Create Policy",
      "editPolicy": "Edit Policy",
      "alertEndTime": "End Time of Alert",
      "minutes": "Minute(s)",
      "hours": "Hour(s)",
      "days": "Day(s)",
      "sum": "SUM",
      "avg": "AVG",
      "max": "MAX",
      "min": "MIN",
      "newValue": "NEW",
      "activeAlarms": "Active Alarms",
      "historicalAlarms": "Historical Alarms",
      "strategyName": "Policy Name",
      "alertName": "Alert Name",
      "alertNameTitle": "The alarm name can reference the indicator name or dimension name as a variable, with a reference format of ${metric_name}.",
      "sumTitle": "Represents the sum of all dimension data within the selected time range.\n The sum function is used to calculate the total value of multiple time series within the same time range, suitable for merging and aggregating data from all dimensions, such as calculating total traffic.",
      "sumOverTimeTitle": "Represents the sum of multiple data points within the time range for each dimension separately within the selected time range (dimension filtering is required, otherwise the dimension with the largest sum is selected as the final value by default).\n The sum_over_time function is used to calculate the total value of each time series within the specified time range, suitable for analyzing the cumulative value of each dimension over time.",
      "maxTitle": "Represents the maximum value among all dimension data within the selected time range.\n The max function is used to select the maximum value from multiple time series at the same moment, often used to find peaks or highest readings in monitoring metrics.",
      "maxOverTimeTitle": "Represents the maximum value of multiple data points within the time range for each dimension separately within the selected time range (dimension filtering is required, otherwise the dimension with the largest maximum value is selected as the final value by default).\n The max_over_time function is used to find the highest value of each time series within the specified time range, suitable for identifying peak changes in each dimension.",
      "minTitle": "Represents the minimum value among all dimension data within the selected time range.\n The min function is used to select the minimum value from multiple time series at the same moment, suitable for determining the lowest value or troughs in monitoring.",
      "minOverTimeTitle": "Represents the minimum value of multiple data points within the time range for each dimension separately within the selected time range (dimension filtering is required, otherwise the dimension with the smallest minimum value is selected as the final value by default).\n The min_over_time function is used to find the lowest value of each time series within the specified time range, suitable for identifying the lowest points or load conditions in each dimension.",
      "avgTitle": "Represents the average value of all dimension data within the selected time range.\n The avg function is used to calculate the average value of multiple time series at the same moment, suitable for summarizing and analyzing overall performance or load.",
      "avgOverTimeTitle": "Represents the average value of multiple data points within the time range for each dimension separately within the selected time range (dimension filtering is required, otherwise the dimension with the largest average value is selected as the final value by default).\n The avg_over_time function is used to calculate the average value of each time series within the specified time range, suitable for analyzing the average performance of each dimension over time.",
      "lastOverTimeTitle": "Represents the value of the last data point in each dimension within the selected time range.\n The last_over_time function is used to retrieve the last sampled value of each time series within a specified time range, and is suitable for obtaining indicator snapshots of state change monitoring or key time points. For example, it can be used to obtain the last state value of certain ports or instances in the recent query range.",
      "countTitle": "Represents the count of all dimensions within the selected time range.\n The count function is used to count the number of matching time series, suitable for statistics on how many dimensions meet the criteria, such as the number of active instances or ports.",
      "distributionMap": "Distribution Map",
      "message": "Message",
      "activeAlarmsMapTips": "Display a map of the distribution of all active alarms that meet the filtering criteria.",
      "historicalAlarmsMapTips": "Displays a graph of the distribution of all historical alarms that match the filter for the selected time range.",
      "promQLPlaceholder": "Please refer to the syntax of Prometheus to write PromQL, which can usually query and filter relevant metrics.",
      "monitoringTarget": "Monitoring target",
      "alarmLevel": "Alarm Level",
      "noticeWay": "There is currently no notification channel available. You can go to the",
      "systemManage": "system management",
      "config": "to configure it."
    },
    "integrations": {
      "integration": "Integration",
      "configure": "Configure",
      "configureTitle": "Please follow the following guidelines to install the collector.",
      "metricTitle": "The following monitoring indicators are supported by this collector",
      "addGroup": "Add Group",
      "editGroup": "Edit Group",
      "groupImportTips": "Please upload the JSON file.",
      "addMetric": "Add Metric",
      "editMetric": "Edit Metric",
      "dimension": "Dimension",
      "instanceIdKeys": "Unique ID",
      "formula": "Formula",
      "dataType": "Data Type",
      "keyMetric": "Key Metric",
      "configureStepIntro": "Please follow the following guidelines to install the collector.",
      "configureStep1": "Define collection targets",
      "configureStep2": "Select collection metrics",
      "configureStep3": "Configure",
      "step1": "Step1",
      "step2": "Step2",
      "step3": "Step3",
      "collectionNode": "Collection Node",
      "url": "URL",
      "interval": "Interval",
      "intervalDes": "The time interval for collecting monitoring data (unit: seconds).",
      "instanceName": "Instance Name",
      "number": "Number",
      "enum": "Enum",
      "addRule": "Add Rule",
      "editRule": "Edit Rule",
      "condition": "Condition",
      "rule": "Rule",
      "ruleTips": "The rules used to set the asset ownership organization for access are unique to each asset model",
      "ruleModalTips": "After setting the grouping rules, the rules will be executed at regular intervals, and assets that meet the rules will be automatically added to the corresponding groups.",
      "deleteRuleTips": "After deleting the grouping rule, please confirm whether to clear all asset groups that comply with the rule?",
      "generateConfiguration": "Generate Configuration",
      "originalValue": "Original Value",
      "mappedValue": "Mapped Value",
      "manual": "Manual",
      "automatic": "Automatic",
      "basicInformation": "Basic Information",
      "MonitoredObject": "Monitored Object",
      "node": "Node",
      "configuration": "Configuration",
      "metricType": "Metric Type",
      "username": "Username",
      "password": "Password",
      "protocol": "Protocol",
      "cpuDes": "Monitor CPU usage, including utilization percentage, load average, and system versus user time.",
      "diskDes": "Monitor disk usage, including disk space, read/write rates, and other related metrics.",
      "diskIoDes": "Monitor the performance and activity of disk input/output operations.",
      "memoryDes": "Monitor memory usage, including memory utilization and available memory.",
      "netDes": "Monitor network performance, including network traffic, bandwidth usage, and latency.",
      "processesDes": "Monitor information about running processes, including the number of processes, CPU usage, and memory consumption.",
      "systemDes": "Monitor overall system performance and health, including metrics such as system uptime, load averages, and general activity levels.",
      "gpuDes": "Monitor Nvidia-GPU usage, including metrics such as percent utilization, video memory usage, and temperature.",
      "port": "Port",
      "host": "Host",
      "version": "Version",
      "community": "Community",
      "timeout": "Timeout",
      "authProtocol": "Auth Protocol",
      "authPassword": "Auth Password",
      "privProtocol": "Priv Protocol",
      "privPassword": "Priv Password",
      "usernameDes": "The username used to access the interface.",
      "passwordDes": "The corresponding login password.",
      "protocolDes": "Indicates the use of the LAN+ protocol for access (commonly used in newer versions of IPMI).",
      "portDes": "Configured SNMP port number, typically using port 161 for communication with the device.",
      "versionDes": "Specifies the SNMP protocol version to use, such as v2c or v3, defining the communication mechanism and security level.",
      "communityDes": "The authentication string used for SNMPv2c, similar to a password, allowing access to the device's SNMP data.",
      "timeoutDes": "The timeout period for data requests from the device, where requests exceeding the configured time (e.g., 10s) are considered failed.",
      "nameDes": "The SNMPv3 username used for authentication.",
      "levelDes": "The security level setting, such as authPriv, which means both authentication and privacy (encryption) are used.",
      "authProtocolDes": "The authentication protocol to use，for securing the authentication process.",
      "authPasswordDes": "The password used for authentication, corresponding to the chosen authentication protocol.",
      "privProtocolDes": "The encryption protocol to use, for securing the data transmitted.",
      "privPasswordDes": "The password used for encryption, corresponding to the chosen encryption protocol.",
      "seviceName": "Sevice Name",
      "seviceNameDes": "The service name to be monitored should be consistent with the actual running service.",
      "dataSource": "Data Source",
      "dataSourceDes": "Monitor the incoming data to ensure that the system accurately acquires the required data.",
      "dbName": "Database Name",
      "dbNameDes": "The specific name of the database required for access",
      "dbType": "Database Type",
      "dbTypeDes": "The database types required for collection",
      "collectorRefs": "Indicator configuration name",
      "collectorRefsDes": "Assign a clear name to the monitoring metric configuration",
      "connectionTime": "Maximum connection duration",
      "connectionTimeDes": "Maximum duration allowed for device connection to the database (unit: minutes)",
      "ipDes": "The IP address of the target host being monitored is used to identify the source of data collection.",
      "urlDes": "Monitor the target website links to detect their availability and performance.",
      "childUrlDes": "URL for sub configuration",
      "endpointDes": "The network address of the host where the monitored Docker container is located is used to accurately locate and collect performance data.",
      "endpoint": "Endpoint",
      "collectionMethod": "Collection Method",
      "reportingStatus": "Reporting Status",
      "lastReportTime": "Last Report Time",
      "installationMethod": "Installation Method",
      "updateConfigration": "Update",
      "normal": "Normal",
      "inactive": "Inactive",
      "unavailable": "Unavailable",
      "servers": "Server",
      "serversDes": "Servers of the monitored object",
      "address": "Address",
      "addressDes": "access address",
      "commonPortDes": "Port for communication with devices",
      "commonHostDes": "Host for communication with devices",
      "listeningPort": "Listening port",
      "listeningPortDes": "Specify the port number that the program should listen on during runtime to receive external requests and connections.",
      "color": "Color",
      "note": "The monitoring data of K8S only supports active reporting, and is not supported to be accessed here for the time being.",
      "deleteRules": "Delete Rule",
      "deleteGroup": "Delete and Clear Groups",
      "conditionDes": "Specific rules for triggering monitoring.",
      "publishAddress": "Publish Address",
      "publishPort": "Publish Port",
      "publishAddressDes": "The main website for system monitoring, used to detect its availability and performance status.",
      "publishPortDes": "The specific port that the program listens on during runtime, responsible for receiving requests and connections from external sources.",
      "mechanism": "Mechanism",
      "mechanismDes": "Used to process and respond to requests received through the publishing port, including the complete process of request parsing, processing, and returning results.",
      "kafkaVersionDes": "Specify the version details of the current program",
      "lcAll": "Primary Language",
      "lcAllDes": "The primary language environment used by the system",
      "lang": "Base Language",
      "langDes": "The default underlying language setting of the system",
      "libraryPath": "Driver Library Directory",
      "libraryPathDes": "The path where driver library files are stored",
      "dbTimeout": "Waiting Time",
      "dbTimeoutDes": "The maximum waiting time for database connection (in seconds)",
      "dataTypeDes": "Define the format and rules for storing, processing, and transmitting data in a computer"
    }
  }
}
